{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/React/Box_Game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport boxes from \"./boxes\";\nimport Box from \"./Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [squares, setSquares] = React.useState(boxes);\n\n  function toggle(id) {\n    setSquares(prevSquares => {\n      const newSquares = [];\n\n      for (let i = 0; i < prevSquares.length; i++) {\n        const currentSquare = prevSquares[i];\n\n        if (currentSquare.id === id) {\n          const updatedSquare = { ...currentSquare,\n            on: !currentSquare.on\n          };\n          newSquares.push(updatedSquare);\n        } else {\n          newSquares.push(currentSquare);\n        }\n      }\n\n      return newSquares;\n    });\n  }\n\n  const squareElements = squares.map(square => /*#__PURE__*/_jsxDEV(Box, {\n    id: square.id,\n    on: square.on,\n    toggle: toggle\n  }, square.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: squareElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"lSYxk2ImfL+cMGSwL8U+G7EHn3o=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mac/Downloads/React/Box_Game/src/App.js"],"names":["React","boxes","Box","App","squares","setSquares","useState","toggle","id","prevSquares","newSquares","i","length","currentSquare","updatedSquare","on","push","squareElements","map","square"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAeL,KAAf,CAA9B;;AAEA,WAASM,MAAT,CAAgBC,EAAhB,EAAoB;AAClBH,IAAAA,UAAU,CAAEI,WAAD,IAAiB;AAC1B,YAAMC,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,cAAME,aAAa,GAAGJ,WAAW,CAACE,CAAD,CAAjC;;AACA,YAAIE,aAAa,CAACL,EAAd,KAAqBA,EAAzB,EAA6B;AAC3B,gBAAMM,aAAa,GAAG,EACpB,GAAGD,aADiB;AAEpBE,YAAAA,EAAE,EAAE,CAACF,aAAa,CAACE;AAFC,WAAtB;AAIAL,UAAAA,UAAU,CAACM,IAAX,CAAgBF,aAAhB;AACD,SAND,MAMO;AACLJ,UAAAA,UAAU,CAACM,IAAX,CAAgBH,aAAhB;AACD;AACF;;AACD,aAAOH,UAAP;AACD,KAfS,CAAV;AAgBD;;AAED,QAAMO,cAAc,GAAGb,OAAO,CAACc,GAAR,CAAaC,MAAD,iBACjC,QAAC,GAAD;AAAqB,IAAA,EAAE,EAAEA,MAAM,CAACX,EAAhC;AAAoC,IAAA,EAAE,EAAEW,MAAM,CAACJ,EAA/C;AAAmD,IAAA,MAAM,EAAER;AAA3D,KAAUY,MAAM,CAACX,EAAjB;AAAA;AAAA;AAAA;AAAA,UADqB,CAAvB;AAIA,sBAAO;AAAA,cAAOS;AAAP;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA3BuBd,G;;KAAAA,G","sourcesContent":["import React from \"react\";\nimport boxes from \"./boxes\";\nimport Box from \"./Box\";\n\nexport default function App() {\n  const [squares, setSquares] = React.useState(boxes);\n\n  function toggle(id) {\n    setSquares((prevSquares) => {\n      const newSquares = [];\n      for (let i = 0; i < prevSquares.length; i++) {\n        const currentSquare = prevSquares[i];\n        if (currentSquare.id === id) {\n          const updatedSquare = {\n            ...currentSquare,\n            on: !currentSquare.on,\n          };\n          newSquares.push(updatedSquare);\n        } else {\n          newSquares.push(currentSquare);\n        }\n      }\n      return newSquares;\n    });\n  }\n\n  const squareElements = squares.map((square) => (\n    <Box key={square.id} id={square.id} on={square.on} toggle={toggle} />\n  ));\n\n  return <main>{squareElements}</main>;\n}\n"]},"metadata":{},"sourceType":"module"}